(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{763:function(s,t,n){"use strict";n.r(t);var a=n(1),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"c-类函数后面加const的作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-类函数后面加const的作用"}},[s._v("#")]),s._v(" c++类函数后面加const的作用")]),s._v(" "),n("p",[s._v("Created: March 19, 2024 11:46 AM")]),s._v(" "),n("p",[s._v("在C++中，在类成员函数的声明和定义末尾添加**"),n("code",[s._v("const")]),n("strong",[s._v("关键字有特殊的含义。这表明该成员函数是")]),n("code",[s._v("const")]),n("strong",[s._v("-qualified，意味着它不会修改对象的任何成员变量（除了那些用")]),n("code",[s._v("mutable")]),s._v("**关键字标记的变量）。这种函数可以被称为“常量成员函数”。")]),s._v(" "),n("h3",{attrs:{id:"常量成员函数的特点和作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常量成员函数的特点和作用"}},[s._v("#")]),s._v(" "),n("strong",[s._v("常量成员函数的特点和作用：")])]),s._v(" "),n("ol",[n("li",[n("strong",[s._v("保证不修改对象状态")]),s._v("：通过将成员函数声明为**"),n("code",[s._v("const")]),n("strong",[s._v("，你向编译器和其他程序员保证，调用该函数不会改变对象的状态。这包括不修改成员变量和不调用任何非")]),n("code",[s._v("const")]),s._v("**成员函数。")]),s._v(" "),n("li",[n("strong",[s._v("允许在常量对象上调用")]),s._v("：只有**"),n("code",[s._v("const")]),n("strong",[s._v("成员函数可以在常量对象上调用。这意味着如果你有一个")]),n("code",[s._v("const")]),n("strong",[s._v("对象（或")]),n("code",[s._v("const")]),n("strong",[s._v("引用/指针），你只能调用它的")]),n("code",[s._v("const")]),s._v("**成员函数。")])]),s._v(" "),n("h3",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" "),n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[s._v("cppCopy code\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("MyClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 常量成员函数")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 非常量成员函数")]),s._v("\n        value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    MyClass "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("obj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" MyClass "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("constObj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    std"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" constObj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" std"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 合法，因为getValue()是const成员函数")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// constObj.setValue(30); // 非法，因为setValue()是非const成员函数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("在上述示例中，"),n("strong",[n("code",[s._v("getValue()")]),n("strong",[s._v("函数后面加了")]),n("code",[s._v("const")])]),s._v("，表示这个函数不会修改任何成员变量。因此，即使对于**"),n("code",[s._v("const")]),n("strong",[s._v("对象")]),n("code",[s._v("constObj")]),n("strong",[s._v("，也可以调用")]),n("code",[s._v("getValue()")]),n("strong",[s._v("函数。相反，")]),n("code",[s._v("setValue()")]),n("strong",[s._v("函数尝试修改成员变量，所以它不是")]),n("code",[s._v("const")]),n("strong",[s._v("成员函数，不能在")]),n("code",[s._v("const")]),s._v("**对象上调用。")]),s._v(" "),n("h3",{attrs:{id:"为什么使用常量成员函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用常量成员函数"}},[s._v("#")]),s._v(" "),n("strong",[s._v("为什么使用常量成员函数？")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("增强代码安全性")]),s._v("：防止函数无意中修改对象状态。")]),s._v(" "),n("li",[n("strong",[s._v("提高代码可读性和维护性")]),s._v("：**"),n("code",[s._v("const")]),s._v("**成员函数清楚地表明了函数的意图，即不改变对象状态。")]),s._v(" "),n("li",[n("strong",[s._v("支持常量和非常量代码重用")]),s._v("：允许同一个函数在常量和非常量对象上被重用，增加了代码的灵活性。")])]),s._v(" "),n("p",[s._v("总之，合理使用**"),n("code",[s._v("const")]),s._v("**成员函数是C++编程中的一种良好实践，有助于编写更安全、更清晰的代码。")])])}),[],!1,null,null,null);t.default=e.exports}}]);