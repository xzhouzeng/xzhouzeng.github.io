(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{772:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"空类大小及相关介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空类大小及相关介绍"}},[s._v("#")]),s._v(" 空类大小及相关介绍")]),s._v(" "),a("p",[s._v("Created: March 19, 2024 3:21 PM")]),s._v(" "),a("p",[s._v("在C++中，空类的实例大小不是0，而是1字节。这是为了确保每个不同的对象实例都有一个独特的地址。如果空类的实例大小为0，那么两个不同的对象可能会被分配相同的地址，这会违反C++标准中关于对象唯一性的规定。")]),s._v(" "),a("h3",{attrs:{id:"为什么空类的大小是1字节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么空类的大小是1字节"}},[s._v("#")]),s._v(" "),a("strong",[s._v("为什么空类的大小是1字节？")])]),s._v(" "),a("p",[s._v("在C++中，每个对象需要有一个独特的地址，即使对象是空的。这个规则允许对象被成功地用作基类或被用于其他需要区分不同对象地址的场合。如果允许对象的大小为0，那么在创建多个这种对象时，它们可能会占据相同的内存地址，这在C++的语义中是不允许的。因此，标准规定了即使是空类的实例也至少占用1字节的空间，以保证每个实例都有一个唯一的内存地址。")]),s._v(" "),a("h3",{attrs:{id:"示例代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例代码"}},[s._v("#")]),s._v(" "),a("strong",[s._v("示例代码")])]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmptyClass")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Size of an empty class: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EmptyClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("输出将会是：")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("Size of an "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个例子展示了即使**"),a("code",[s._v("EmptyClass")]),s._v("**没有任何成员变量和成员函数，它的实例大小仍然是1字节。")]),s._v(" "),a("h3",{attrs:{id:"类似问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类似问题"}},[s._v("#")]),s._v(" "),a("strong",[s._v("类似问题")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("带有静态成员的类")]),s._v("：静态成员变量不计算在类实例的大小中，因为它们存储在全局数据区，而不是每个类实例中。")]),s._v(" "),a("li",[a("strong",[s._v("带有虚函数的类")]),s._v("：如果一个类有虚函数，它的实例大小会增加，因为需要存储指向虚函数表（vtable）的指针。虚函数表是一个包含指向类虚函数的指针的数组。这个指针的大小通常是4字节（在32位系统上）或8字节（在64位系统上），但这依赖于编译器和目标平台。")]),s._v(" "),a("li",[a("strong",[s._v("继承")]),s._v("：如果一个类是从其他类继承而来的，它的大小至少等于基类的大小，加上派生类自己的成员变量所需的空间。如果使用虚拟继承，可能还会有额外的开销。")])]),s._v(" "),a("p",[s._v("了解这些规则有助于更好地理解C++对象模型以及如何在设计类时考虑内存布局。")])])}),[],!1,null,null,null);t.default=e.exports}}]);